# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0
packer {
  required_plugins {
    windows-update = {
      version = "0.15.0"
      source  = "github.com/rgl/windows-update"
    }
    azure = {
      version = ">= 2.0.4"
      source  = "github.com/hashicorp/azure"
    }
  }
}

variable "resource_group" {
  type    = string
  default = "managed-images-rg"
}

source "azure-arm" "autogenerated_1" {
  polling_duration_timeout = "30m"
  location                 = "East US"
  use_azure_cli_auth       = "true"
  vm_size                  = "Standard_D8ds_v4"

  custom_script  = "powershell -ExecutionPolicy Unrestricted -NoProfile -NonInteractive -Command \"$userData = (Invoke-RestMethod -H @{'Metadata'='True'} -Method GET -Uri 'http://169.254.169.254/metadata/instance/compute/userData?api-version=2021-01-01&format=text'); $contents = [System.Text.Encoding]::UTF8.GetString([Convert]::FromBase64String($userData)); set-content -path c:\\Windows\\Temp\\userdata.ps1 -value $contents; . c:\\Windows\\Temp\\userdata.ps1;\""
  user_data_file = "./userdata.ps1"

  os_type         = "Windows"
  image_offer     = "Windows-11"
  image_publisher = "MicrosoftWindowsDesktop"
  image_sku       = "win11-24h2-avd"
  image_version   = "latest"

  managed_image_name                = "windows-11-avd-{{timestamp}}"
  managed_image_resource_group_name = var.resource_group

  winrm_port     = 5986
  communicator   = "winrm"
  winrm_use_ssl  = true
  winrm_insecure = true
  winrm_timeout  = "5m"
  winrm_username = "packer"
}

build {
  sources = ["source.azure-arm.autogenerated_1"]

  provisioner "powershell" {
    inline = [
      "Write-Output 'Installing Chocolatey...'",
      "Set-ExecutionPolicy Bypass -Scope Process -Force",
      "[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072",
      "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))",
      "Write-Output 'Chocolatey installed successfully. Installing applications...'",
      "choco install beyondcompare.4 visualstudio2022professional 1password 1password-cli wsl op -y",
      "Write-Output 'Applications installed successfully using Chocolatey. Uninstalling Chocolatey...'",
      "choco uninstall chocolatey -y",
      "Write-Output 'Chocolatey uninstalled successfully.'"
    ]
  }

  provisioner "windows-update" {
    search_criteria = "IsInstalled=0"
    filters = [
      "exclude:$_.Title -like '*Preview*'",
      "include:$true",
    ]
    update_limit = 25
  }

  provisioner "powershell" {
    inline = [
      "if (Test-Path \"$Env:SystemRoot\\windows\\system32\\Sysprep\\unattend.xml\") { Remove-Item \"$Env:SystemRoot\\windows\\system32\\Sysprep\\unattend.xml\" -Force }",
      "& \"$Env:SystemRoot\\System32\\Sysprep\\Sysprep.exe\" /oobe /generalize /shutdown /quiet"
    ]
  }
}
